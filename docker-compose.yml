services:
  db:
    image: mysql:8.1
    restart: always
    env_file:
      - deployment/.env
    ports:
      - "3306:3306"
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=${MYSQL_ROOT_PASSWORD} --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 30s
      retries: 6
    volumes:
      - database:/var/lib/mysql
    networks:
      - network
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    image: flask-api
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 5000:5000
    volumes:
      - filestorage:/var/lib/filestorage
    networks:
      - network
  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    image: react-flask-client
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:80"
    networks:
      - network
volumes:
  database:
  filestorage:
networks:
  network:

# docker compose up
# docker compose build